import java.util.* ;
import java.io.*; 
public class Stack {
	// Initialize your data structure.
	private List<Integer> stackList;
	private int top;
	Stack() {
		this.stackList = new ArrayList<>();
		this.top = -1;
	}

	// Pushes 'X' into the stack. Returns true if it gets pushed into the stack, and false otherwise.
	public boolean push(int x) {
		// Write your code here.
		top++;
		stackList.add(x);
		return true;
	}

	// Pops top element from Stack. Returns -1 if the stack is empty, otherwise returns the popped element.
	public int pop() {
		// Write your code here.
		if(isEmpty())
		{
			return -1;
		}
			int p = stackList.get(top);
			stackList.remove(top--);
			return p;
	}

	// Returns the topmost element of the stack. In case the stack is empty, it returns -1.
	public int top() {
		// Write your code here.
		if(top == -1)
		{
			return -1;
		}
		else 
			return stackList.get(top);
	}

	// Returns true if the stack is empty, otherwise false.
	public boolean isEmpty() {
		// Write your code here.
		if(top == -1)
		{
			return true;
		}
		return false;
	}

	// Returns the number of elements currently present in the stack.
	public int size() {
		// Write your code here.
		return stackList.size();
	}
}
