/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        List<Integer> arr1 = new ArrayList<>();
        List<Integer> arr2 = new ArrayList<>();

        getLeaf(root1,arr1);
        getLeaf(root2,arr2);

        
        if(arr1.size() == arr2.size() )
        {
            for(int i=0;i<arr1.size();i++)
            {
                if(arr1.get(i) != arr2.get(i))
                {
                    return false;
                }
            }
            return true;
        }
            return false;
    }

    public static void getLeaf(TreeNode root,List<Integer> list)
    {
        if(root == null)
        {
            return;
        }
        if(root.left == null && root.right == null)
        {
            list.add(root.val);
        }

        getLeaf(root.left,list);
        getLeaf(root.right,list);
    }
}
