/************************************************************************

    Following is the representation of the Singly Linked List node:

    class Node<T> {
        public T data;
        public Node<T> next;

        public Node(T data) {
            this.data = data;
            this.next = null;
        }
    }

************************************************************************/

/****** USING FLYOD CYCLE DETECTION ALGORITHM *********************/ 
public class Solution {
    public static boolean detectCycle(Node<Integer> head) {
        // Write your code here.
        Node fast = head;
        Node slow = head;


        while(fast != null && fast.next!=null )
        {
            slow=slow.next;
            fast = fast.next.next;

            if(slow == fast)
            {
                return true;
            }
        }

        return false;
    }
}
