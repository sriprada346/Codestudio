import java.util.Stack;
public class Solution {
    public static String infixToPostfix(String exp) {
        // Write your code here

        StringBuilder sb = new StringBuilder();

        Stack<Character> stack = new Stack<>();


        for(char c : exp.toCharArray())
        {
            if(Character.isAlphabetic(c) || Character.isDigit(c))
            {
                sb.append(c);
            }
            else if(c == '(')
            {
                stack.push(c);
            }
            else if(c == ')')
            {
                while(!stack.isEmpty() && stack.peek()!='(')
                {
                    sb.append(stack.pop());
                }

                stack.pop();
                
            } 
            else
            {
                while(!stack.isEmpty() && getPrecedence(stack.peek())>= getPrecedence(c))
                {
                    sb.append(stack.pop());
                }

                stack.push(c);
            }  
        
        }
        while(!stack.isEmpty())
        {
            sb.append(stack.pop());
        }
        
        return sb.toString();
        
    }

    public static int getPrecedence(char c)
    {
        switch(c)
        {
            case '+' : 
            case '-' :
                        return 1;
            case '*' : 
            case '/' : 
                        return 2;
            case '^' : 
                        return 3;
            default :
                        return 0;                                  
        }
    }
}
